// Copyright (c) coherence ApS.
// For all coherence generated code, the coherence SDK license terms apply. See the license file in the coherence Package root folder for more information.

// <auto-generated>
// Generated file. DO NOT EDIT!
// </auto-generated>
namespace Coherence.Generated
{
	using Coherence.ProtocolDef;
	using Coherence.Serializer;
	using Coherence.Brook;
	using UnityEngine;
	using Coherence.Entity;

	public struct Player_acaa15b2fd77b2a4080fa3b9f1088f0e_ColorRequester__char_46_GotColor_66a6aa74_9d10_4e8c_b171_36b364efe44e : IEntityCommand
	{
		public Color color;

		public MessageTarget Routing => MessageTarget.AuthorityOnly;
		public uint GetComponentType() => Definition.InternalPlayer_acaa15b2fd77b2a4080fa3b9f1088f0e_ColorRequester__char_46_GotColor_66a6aa74_9d10_4e8c_b171_36b364efe44e;

		public Player_acaa15b2fd77b2a4080fa3b9f1088f0e_ColorRequester__char_46_GotColor_66a6aa74_9d10_4e8c_b171_36b364efe44e
		(
			Color datacolor
		)
		{
			color = datacolor;
		}

		public static void Serialize(Player_acaa15b2fd77b2a4080fa3b9f1088f0e_ColorRequester__char_46_GotColor_66a6aa74_9d10_4e8c_b171_36b364efe44e commandData, IOutProtocolBitStream bitStream)
		{
			var converted_color = commandData.color.ToCoreColor();
			bitStream.WriteColor(converted_color, FloatMeta.ForFixedPoint(0, 1, 2.3283064370807973753052522170037E-10));
		}

		public static Player_acaa15b2fd77b2a4080fa3b9f1088f0e_ColorRequester__char_46_GotColor_66a6aa74_9d10_4e8c_b171_36b364efe44e Deserialize(IInProtocolBitStream bitStream)
		{
			var converted_color = bitStream.ReadColor(FloatMeta.ForFixedPoint(0, 1, 2.3283064370807973753052522170037E-10));
			var datacolor = converted_color.ToUnityColor();

			return new Player_acaa15b2fd77b2a4080fa3b9f1088f0e_ColorRequester__char_46_GotColor_66a6aa74_9d10_4e8c_b171_36b364efe44e
			(
				datacolor
			){};
		}
	}
}
