// Copyright (c) coherence ApS.
// For all coherence generated code, the coherence SDK license terms apply. See the license file in the coherence Package root folder for more information.

// <auto-generated>
// Generated file. DO NOT EDIT!
// </auto-generated>
namespace Coherence.Generated
{
	using System;
	using System.Collections.Generic;
	using System.Linq;
	using UnityEngine;
	using Coherence.Toolkit;
	using Coherence.Toolkit.Bindings;
	using Coherence.Entity;
	using Coherence.ProtocolDef;
	using Coherence.Brook;
	using Coherence.Toolkit.Bindings.ValueBindings;
	using Coherence.Toolkit.Bindings.TransformBindings;
	using Coherence.Connection;
	using Coherence.Log;
	using Logger = Coherence.Log.Logger;
	using UnityEngine.Scripting;

	public class Binding_9d97557bee6ca2d44a4bc9037b5278ac_bbed07e8_8689_439e_9eaf_0770567a95bd : PositionBinding
	{
		public override string CoherenceComponentName => "WorldPosition";

		public override uint FieldMask => 0b00000000000000000000000000000001;

		public override Vector3 Value
		{
			get => (Vector3)(UnityEngine.Vector3)(coherenceSync.coherencePosition);
			set => coherenceSync.coherencePosition = (UnityEngine.Vector3)(value);
		}

		protected override Vector3 ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
		{
			var value = ((WorldPosition)coherenceComponent).value;
			if (!coherenceSync.HasParentWithCoherenceSync)
            {
                value += floatingOriginDelta;
            }
			return value;
		}
		
		public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, double time)
		{
			var update = (WorldPosition)coherenceComponent;
			if (RuntimeInterpolationSettings.IsInterpolationNone) 
			{
				update.value = Value;
			}
			else 
			{
				update.value = GetInterpolatedAt(time);
			}
			return update;
		}

		public override ICoherenceComponentData CreateComponentData()
		{
			return new WorldPosition();
		}
	}

	public class Binding_9d97557bee6ca2d44a4bc9037b5278ac_560d4559_d1e9_4cbf_92ed_e87d25b83e4b : IntBinding
	{
		private global::ColorGiver CastedUnityComponent;

		protected override void OnBindingCloned()
		{
			CastedUnityComponent = (global::ColorGiver)UnityComponent;
		}
		public override string CoherenceComponentName => "Color__char_32_Giver_9d97557bee6ca2d44a4bc9037b5278ac_ColorGiver_2768996226198540025";

		public override uint FieldMask => 0b00000000000000000000000000000001;

		public override int Value
		{
			get => (int)(System.Int32)(CastedUnityComponent.index);
			set => CastedUnityComponent.index = (System.Int32)(value);
		}

		protected override int ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
		{
			var value = ((Color__char_32_Giver_9d97557bee6ca2d44a4bc9037b5278ac_ColorGiver_2768996226198540025)coherenceComponent).index;
			return value;
		}
		
		public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, double time)
		{
			var update = (Color__char_32_Giver_9d97557bee6ca2d44a4bc9037b5278ac_ColorGiver_2768996226198540025)coherenceComponent;
			if (RuntimeInterpolationSettings.IsInterpolationNone) 
			{
				update.index = Value;
			}
			else 
			{
				update.index = GetInterpolatedAt(time);
			}
			return update;
		}

		public override ICoherenceComponentData CreateComponentData()
		{
			return new Color__char_32_Giver_9d97557bee6ca2d44a4bc9037b5278ac_ColorGiver_2768996226198540025();
		}
	}


	[Preserve]
	public class CoherenceSyncColor__char_32_Giver_9d97557bee6ca2d44a4bc9037b5278ac : CoherenceSyncBaked
	{
		private SerializeEntityID entityId;
		private Logger logger = Log.GetLogger<CoherenceSyncColor__char_32_Giver_9d97557bee6ca2d44a4bc9037b5278ac>();

		// Cached targets for commands		
		private global::ColorGiver Color__char_32_Giver_9d97557bee6ca2d44a4bc9037b5278ac_ColorGiver__char_46_RequestColor_a638e498_bd53_4b7b_9847_014c261072e7_CommandTarget;

		private IClient client;
		private CoherenceBridge bridge;

		private readonly Dictionary<string, Binding> bakedValueBindings = new Dictionary<string, Binding>()
		{
			["bbed07e8-8689-439e-9eaf-0770567a95bd"] = new Binding_9d97557bee6ca2d44a4bc9037b5278ac_bbed07e8_8689_439e_9eaf_0770567a95bd(),
			["560d4559-d1e9-4cbf-92ed-e87d25b83e4b"] = new Binding_9d97557bee6ca2d44a4bc9037b5278ac_560d4559_d1e9_4cbf_92ed_e87d25b83e4b(),
		};

		private Dictionary<string, Action<CommandBinding, CommandsHandler>> bakedCommandBindings =
			new Dictionary<string, Action<CommandBinding, CommandsHandler>>();

		public CoherenceSyncColor__char_32_Giver_9d97557bee6ca2d44a4bc9037b5278ac()
		{
			bakedCommandBindings.Add("a638e498-bd53-4b7b-9847-014c261072e7", BakeCommandBinding_Color__char_32_Giver_9d97557bee6ca2d44a4bc9037b5278ac_ColorGiver__char_46_RequestColor_a638e498_bd53_4b7b_9847_014c261072e7);
		}

		public override Binding BakeValueBinding(Binding valueBinding)
		{
			if (bakedValueBindings.TryGetValue(valueBinding.guid, out var bakedBinding))
			{
				valueBinding.CloneTo(bakedBinding);
				return bakedBinding;
			}

			return null;
		}

		public override void BakeCommandBinding(CommandBinding commandBinding, CommandsHandler commandsHandler)
		{
			if (bakedCommandBindings.TryGetValue(commandBinding.guid, out var commandBindingBaker))
			{
				commandBindingBaker.Invoke(commandBinding, commandsHandler);
			}
		}
		private void BakeCommandBinding_Color__char_32_Giver_9d97557bee6ca2d44a4bc9037b5278ac_ColorGiver__char_46_RequestColor_a638e498_bd53_4b7b_9847_014c261072e7(CommandBinding commandBinding, CommandsHandler commandsHandler)
		{
			Color__char_32_Giver_9d97557bee6ca2d44a4bc9037b5278ac_ColorGiver__char_46_RequestColor_a638e498_bd53_4b7b_9847_014c261072e7_CommandTarget = (global::ColorGiver)commandBinding.UnityComponent;
			commandsHandler.AddBakedCommand("ColorGiver.RequestColor", "(Coherence.Toolkit.CoherenceSync)",
				SendCommand_Color__char_32_Giver_9d97557bee6ca2d44a4bc9037b5278ac_ColorGiver__char_46_RequestColor_a638e498_bd53_4b7b_9847_014c261072e7, ReceiveLocalCommand_Color__char_32_Giver_9d97557bee6ca2d44a4bc9037b5278ac_ColorGiver__char_46_RequestColor_a638e498_bd53_4b7b_9847_014c261072e7, MessageTarget.AuthorityOnly, Color__char_32_Giver_9d97557bee6ca2d44a4bc9037b5278ac_ColorGiver__char_46_RequestColor_a638e498_bd53_4b7b_9847_014c261072e7_CommandTarget,false);
		}

		public override List<ICoherenceComponentData> CreateEntity(bool usesLodsAtRuntime, string archetypeName)
		{
			if (!usesLodsAtRuntime)
			{
				return null;
			}

			if (Archetypes.IndexForName.TryGetValue(archetypeName, out int archetypeIndex))
			{
				var components = new List<ICoherenceComponentData>()
				{
					new ArchetypeComponent
					{
						index = archetypeIndex
					}
				};

				return components;
			}
	
			logger.Warning($"Unable to find archetype {archetypeName} in dictionary. Please, bake manually (coherence > Bake)");

			return null;
		}

		public override void Dispose()
		{
		}

		public override void Initialize(SerializeEntityID entityId, CoherenceBridge bridge, IClient client, CoherenceInput input, Logger logger)
		{
			this.logger = logger.With<CoherenceSyncColor__char_32_Giver_9d97557bee6ca2d44a4bc9037b5278ac>();
			this.bridge = bridge;
			this.entityId = entityId;
			this.client = client;
		}
		void SendCommand_Color__char_32_Giver_9d97557bee6ca2d44a4bc9037b5278ac_ColorGiver__char_46_RequestColor_a638e498_bd53_4b7b_9847_014c261072e7(MessageTarget target, object[] args)
		{
			var command = new Color__char_32_Giver_9d97557bee6ca2d44a4bc9037b5278ac_ColorGiver__char_46_RequestColor_a638e498_bd53_4b7b_9847_014c261072e7();
			int i = 0;
			command.requester = (SerializeEntityID)bridge.UnityObjectToEntityId(args[i++] as CoherenceSync);
			client.SendCommand(command, target, entityId);
		}

		void ReceiveLocalCommand_Color__char_32_Giver_9d97557bee6ca2d44a4bc9037b5278ac_ColorGiver__char_46_RequestColor_a638e498_bd53_4b7b_9847_014c261072e7(MessageTarget target, object[] args)
		{
			var command = new Color__char_32_Giver_9d97557bee6ca2d44a4bc9037b5278ac_ColorGiver__char_46_RequestColor_a638e498_bd53_4b7b_9847_014c261072e7();
			int i = 0;
			command.requester = (SerializeEntityID)bridge.UnityObjectToEntityId(args[i++] as CoherenceSync);
			ReceiveCommand_Color__char_32_Giver_9d97557bee6ca2d44a4bc9037b5278ac_ColorGiver__char_46_RequestColor_a638e498_bd53_4b7b_9847_014c261072e7(command);
		}

		void ReceiveCommand_Color__char_32_Giver_9d97557bee6ca2d44a4bc9037b5278ac_ColorGiver__char_46_RequestColor_a638e498_bd53_4b7b_9847_014c261072e7(Color__char_32_Giver_9d97557bee6ca2d44a4bc9037b5278ac_ColorGiver__char_46_RequestColor_a638e498_bd53_4b7b_9847_014c261072e7 command)
		{
			var target = Color__char_32_Giver_9d97557bee6ca2d44a4bc9037b5278ac_ColorGiver__char_46_RequestColor_a638e498_bd53_4b7b_9847_014c261072e7_CommandTarget;
			target.RequestColor(bridge.EntityIdToCoherenceSync(command.requester));
		}

		public override void ReceiveCommand(IEntityCommand command)
		{
			switch(command)
			{
				case Color__char_32_Giver_9d97557bee6ca2d44a4bc9037b5278ac_ColorGiver__char_46_RequestColor_a638e498_bd53_4b7b_9847_014c261072e7 castedCommand:
					ReceiveCommand_Color__char_32_Giver_9d97557bee6ca2d44a4bc9037b5278ac_ColorGiver__char_46_RequestColor_a638e498_bd53_4b7b_9847_014c261072e7(castedCommand);
					break;
				default:
					logger.Warning($"[CoherenceSyncColor__char_32_Giver_9d97557bee6ca2d44a4bc9037b5278ac] Unhandled command: {command.GetType()}.");
					break;
			}
		}
	}
}
